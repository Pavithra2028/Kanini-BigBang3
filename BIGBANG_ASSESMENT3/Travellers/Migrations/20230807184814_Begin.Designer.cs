// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travellers.Context;

#nullable disable

namespace Travellers.Migrations
{
    [DbContext(typeof(TravellersContext))]
    [Migration("20230807184814_Begin")]
    partial class Begin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Travellers.Models.Booking", b =>
                {
                    b.Property<int>("booking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("booking_id"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IsConfirmed")
                        .HasColumnType("int");

                    b.Property<string>("city_of_residence")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("no_of_people")
                        .HasColumnType("int");

                    b.Property<int>("package_id")
                        .HasColumnType("int");

                    b.Property<long>("phone_number")
                        .HasColumnType("bigint");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("travellers_id")
                        .HasColumnType("int");

                    b.HasKey("booking_id");

                    b.HasIndex("travellers_id");

                    b.ToTable("booking");
                });

            modelBuilder.Entity("Travellers.Models.Feedback", b =>
                {
                    b.Property<int>("feedback_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("feedback_id"));

                    b.Property<string>("comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("package_id")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<int>("travellers_id")
                        .HasColumnType("int");

                    b.HasKey("feedback_id");

                    b.HasIndex("travellers_id");

                    b.ToTable("feedback");
                });

            modelBuilder.Entity("Travellers.Models.Payment", b =>
                {
                    b.Property<int>("payment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("payment_id"));

                    b.Property<int>("Expirymonth")
                        .HasColumnType("int");

                    b.Property<int>("Expiryyear")
                        .HasColumnType("int");

                    b.Property<int>("booking_id")
                        .HasColumnType("int");

                    b.Property<long>("card_number")
                        .HasColumnType("bigint");

                    b.Property<int>("cvv_number")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("payment_id");

                    b.HasIndex("booking_id");

                    b.ToTable("payment");
                });

            modelBuilder.Entity("Travellers.Models.Traveller", b =>
                {
                    b.Property<int?>("travellers_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("travellers_id"));

                    b.Property<string>("password")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("travellers_name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("travellers_id");

                    b.ToTable("travellers");
                });

            modelBuilder.Entity("Travellers.Models.Booking", b =>
                {
                    b.HasOne("Travellers.Models.Traveller", "travellers")
                        .WithMany("booking")
                        .HasForeignKey("travellers_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("travellers");
                });

            modelBuilder.Entity("Travellers.Models.Feedback", b =>
                {
                    b.HasOne("Travellers.Models.Traveller", "travellers")
                        .WithMany()
                        .HasForeignKey("travellers_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("travellers");
                });

            modelBuilder.Entity("Travellers.Models.Payment", b =>
                {
                    b.HasOne("Travellers.Models.Booking", "Booking")
                        .WithMany()
                        .HasForeignKey("booking_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("Travellers.Models.Traveller", b =>
                {
                    b.Navigation("booking");
                });
#pragma warning restore 612, 618
        }
    }
}
