// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Traveller_Agents.Context;

#nullable disable

namespace Traveller_Agents.Migrations
{
    [DbContext(typeof(TravelagentContext))]
    [Migration("20230807083955_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Traveller_Agents.Models.Spot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("image1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("package_id")
                        .HasColumnType("int");

                    b.Property<int>("spot_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("package_id");

                    b.ToTable("spots");
                });

            modelBuilder.Entity("Traveller_Agents.Models.Tourpackages", b =>
                {
                    b.Property<int>("package_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("package_id"));

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.Property<string>("duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("food_details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hotel_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iternary_details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("packagename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("price")
                        .HasColumnType("int");

                    b.Property<string>("speciality_of_the_place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("traveller_agent_id")
                        .HasColumnType("int");

                    b.Property<string>("vacation_type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("package_id");

                    b.ToTable("tour");
                });

            modelBuilder.Entity("Traveller_Agents.Models.Spot", b =>
                {
                    b.HasOne("Traveller_Agents.Models.Tourpackages", "tourpackages")
                        .WithMany("spot")
                        .HasForeignKey("package_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("tourpackages");
                });

            modelBuilder.Entity("Traveller_Agents.Models.Tourpackages", b =>
                {
                    b.Navigation("spot");
                });
#pragma warning restore 612, 618
        }
    }
}
